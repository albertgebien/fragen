<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- habilita a configuração por annotations -->
	<!-- Ativa varias anotacoes para detectar as classes bean
 		Spring's @Required e @Autowired, JSR250 @Resource.-->
	<context:annotation-config />

	<!-- define os pacotes/subpacotes que onde serão procurados beans do spring -->
	<context:component-scan base-package="br.com.brasiliashopping"/>

 	<!-- ADICIONA SUPORTE A ANOTACAO @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
 	<!-- ADICIONA SUPORTE A ANOTACAO @Scheduled -->
	<task:annotation-driven />
 	
<!--  	<tx:advice id="txAdvice"> -->
<!-- 	  <tx:attributes> -->
<!-- 	 	 <tx:method name="*" rollback-for="Throwable" /> -->
<!-- 	  </tx:attributes> -->
<!-- 	</tx:advice> -->
	
	<!-- org.springframework.jdbc.datasource.DriverManagerDataSource 
		org.apache.commons.dbcp.BasicDataSource
	-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.mysql.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.mysql.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.mysql.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.mysql.password}</value>
		</property>
	</bean>
	
	<bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL" />
                <property name="showSql" value="false" />
            </bean>
        </property>
    </bean>
    
     <bean id="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

	<!--  bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="proxyTargetClass">
			<value>true</value>
		</property>
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*DAOImpl</value>
				<value>*DAO</value>
			</list>
		</property>
	</bean> -->
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<property name="scopes">
			<map>
				<entry key="view">
					<bean class="br.com.brasiliashopping.scope.ViewScope" />
				</entry>
			</map>
		</property>
	</bean>
	
</beans>